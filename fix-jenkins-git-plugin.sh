#!/bin/bash

echo "üîß Fix Jenkins Git Plugin Issue"

# T√¨m Jenkins container
JENKINS_CONTAINER=$(docker ps --filter "name=jenkins" --format "{{.Names}}" | head -1)

if [ -z "$JENKINS_CONTAINER" ]; then
    echo "‚ùå Kh√¥ng t√¨m th·∫•y Jenkins container!"
    exit 1
fi

echo "‚úÖ Jenkins container: $JENKINS_CONTAINER"

echo "üîß Fix Jenkins workspace permissions..."
docker exec -u root $JENKINS_CONTAINER mkdir -p /var/jenkins_home/workspace
docker exec -u root $JENKINS_CONTAINER chown -R jenkins:jenkins /var/jenkins_home/workspace
docker exec -u root $JENKINS_CONTAINER chmod -R 755 /var/jenkins_home/workspace

echo "üîß Init global Git config..."
docker exec $JENKINS_CONTAINER git config --global user.name "Jenkins CI"
docker exec $JENKINS_CONTAINER git config --global user.email "jenkins@localhost"
docker exec $JENKINS_CONTAINER git config --global init.defaultBranch main
docker exec $JENKINS_CONTAINER git config --global safe.directory '*'

echo "üß™ Test Git commands..."
docker exec $JENKINS_CONTAINER sh -c 'cd /tmp && git init test-repo && cd test-repo && git remote add origin https://github.com/b19cn248/shopee-affiliate-be.git && git config remote.origin.url https://github.com/b19cn248/shopee-affiliate-be.git'

if [ $? -eq 0 ]; then
    echo "‚úÖ Git test th√†nh c√¥ng!"
    echo "üí° C√≥ th·ªÉ d√πng l·∫°i 'Pipeline script from SCM'"
else
    echo "‚ùå Git test th·∫•t b·∫°i!"
    echo "üí° Khuy·∫øn ngh·ªã d√πng 'Pipeline script' tr·ª±c ti·∫øp"
fi

# Cleanup
docker exec $JENKINS_CONTAINER rm -rf /tmp/test-repo

echo "üéØ Restart Jenkins ƒë·ªÉ apply changes..."
docker restart $JENKINS_CONTAINER

echo "‚úÖ Ho√†n th√†nh! Ch·ªù 30s r·ªìi test l·∫°i Jenkins job"